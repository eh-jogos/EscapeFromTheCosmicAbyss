[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=1]

[sub_resource type="VisualShaderNodeColorUniform" id=2]
uniform_name = "Start"

[sub_resource type="VisualShaderNodeColorUniform" id=3]
uniform_name = "End"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=7]
source = 2

[sub_resource type="VisualShader" id=8]
code = "shader_type canvas_item;
uniform vec4 Start : hint_color;
uniform vec4 End : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = Start.rgb;
	float n_out3p1 = Start.a;

// ColorUniform:4
	vec3 n_out4p0 = End.rgb;
	float n_out4p1 = End.a;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out5p0.x;
	float n_out6p1 = n_out5p0.y;
	float n_out6p2 = n_out5p0.z;

// VectorScalarMix:2
	vec3 n_out2p0 = mix(n_out3p0, n_out4p0, n_out6p1);

// Input:8

// Texture:9
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out5p0.xy);
		n_out9p0 = _tex_read.rgb;
		n_out9p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out9p1;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -150.464, 90.2 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 760, 280 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 560, 160 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 120, 160 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 120, 280 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 120, 400 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 320, 360 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( 120, 480 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( 320, 480 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 4, 0, 2, 1, 5, 0, 6, 0, 6, 1, 2, 2, 2, 0, 0, 0, 8, 0, 9, 2, 9, 1, 0, 1, 5, 0, 9, 0 )

[resource]
shader = SubResource( 8 )
shader_param/Start = Color( 1, 0.819608, 0, 1 )
shader_param/End = Color( 1, 0.266667, 0.490196, 1 )
