[gd_resource type="ShaderMaterial" load_steps=10 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeColorUniform" id=2]
uniform_name = "start"

[sub_resource type="VisualShaderNodeColorUniform" id=3]
uniform_name = "end"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=4]

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeTexture" id=7]
source = 2

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShader" id=9]
code = "shader_type canvas_item;
uniform vec4 start : hint_color;
uniform vec4 end : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = start.rgb;
	float n_out3p1 = start.a;

// ColorUniform:4
	vec3 n_out4p0 = end.rgb;
	float n_out4p1 = end.a;

// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out2p0.x;
	float n_out6p1 = n_out2p0.y;
	float n_out6p2 = n_out2p0.z;

// VectorScalarMix:5
	vec3 n_out5p0 = mix(n_out3p0, n_out4p0, n_out6p0);

// Input:9
	vec3 n_out9p0 = vec3(UV, 0.0);

// Input:7

// Texture:8
	vec3 n_out8p0;
	float n_out8p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out9p0.xy);
		n_out8p0 = _tex_read.rgb;
		n_out8p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out8p1;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -227, 97 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 660, 360 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 0, 420 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 0, 180 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 0, 300 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 460, 200 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 240, 380 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -100, 600 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 240, 500 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 0, 500 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 3, 0, 5, 0, 4, 0, 5, 1, 8, 1, 0, 1, 9, 0, 8, 0, 6, 0, 5, 2, 2, 0, 6, 0, 7, 0, 8, 2 )

[resource]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/start = Color( 1, 0.266667, 0.486275, 1 )
shader_param/end = Color( 1, 0.678431, 0.266667, 1 )
